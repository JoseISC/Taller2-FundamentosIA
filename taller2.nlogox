<?xml version="1.0" encoding="utf-8"?>
<model version="NetLogo 7.0.0" snapToGrid="true">
  <code><![CDATA[; ==========================================
; MUNDO DEL WUMPUS - NetLogo
; Fundamentos de Inteligencia Artificial
; ==========================================

; ============ VARIABLES GLOBALES ============
globals [
    
  ; Métricas de experimento
  episodios-completados
  exitos-totales
  muertes-pozo
  muertes-wumpus
  oro-recolectado
  recompensa-acumulada
  pasos-acumulados
  flechas-usadas-total
  
  ; Listas para tracking
  lista-recompensas
  lista-pasos
  lista-exitos
  
  ; Estado del episodio actual
  episodio-actual
  pasos-episodio
  recompensa-episodio
  oro-encontrado?
  agente-vivo?
  salio-cueva?
]

; ============ VARIABLES DE PATCHES ============
patches-own [
  tiene-pozo?
  tiene-wumpus?
  tiene-oro?
  es-salida?
  visitado?
  
  ; Percepciones
  hay-brisa?
  hay-hedor?
  hay-brillo?
  
  ; Para agente con modelo
  probabilidad-pozo
  probabilidad-wumpus
  celda-segura?
]

; ============ VARIABLES DE AGENTE ============
breed [agentes agente]

agentes-own [
  agente-tiene-oro?
  agente-tiene-flecha?
  agente-direccion ; 0=norte, 1=este, 2=sur, 3=oeste
  
  ; Memoria del agente
  agente-celdas-seguras
  agente-celdas-peligrosas
  agente-celdas-visitadas
  agente-plan-ruta
  
  ; Percepciones actuales
  agente-percibe-brisa?
  agente-percibe-hedor?
  agente-percibe-brillo?
  agente-percibe-grito?
  agente-percibe-choque?
]

; ============ VARIABLES DE WUMPUS ============
breed [wumpuses wumpus]

wumpuses-own [
  vivo?
]

; ==========================================
; SETUP PRINCIPAL
; ==========================================

to setup
  clear-all
  reset-ticks
  
  ; Inicializar métricas
  set episodios-completados 0
  set exitos-totales 0
  set muertes-pozo 0
  set muertes-wumpus 0
  set oro-recolectado 0
  set recompensa-acumulada 0
  set pasos-acumulados 0
  set flechas-usadas-total 0
  
  set lista-recompensas []
  set lista-pasos []
  set lista-exitos []
  
  ; Configurar semilla aleatoria
  if seed > 0 [
    random-seed seed
  ]
  
  ; Crear el mundo
  crear-mundo
  
  ; Crear agente
  crear-agente
  
  ; Iniciar episodio
  iniciar-episodio
end

; ==========================================
; CREAR MUNDO
; ==========================================

to crear-mundo
  ; Configurar tamaño del mundo
  resize-world 0 (grid-size - 1) 0 (grid-size - 1)
  set-patch-size 30
  
  ; Inicializar todos los patches
  ask patches [
    set pcolor white
    set tiene-pozo? false
    set tiene-wumpus? false
    set tiene-oro? false
    set es-salida? false
    set visitado? false
    set hay-brisa? false
    set hay-hedor? false
    set hay-brillo? false
    set probabilidad-pozo 0
    set probabilidad-wumpus 0
    set celda-segura? false
  ]
  
  ; Establecer salida (esquina inferior izquierda)
  ask patch 0 0 [
    set es-salida? true
    set pcolor green
  ]
  
  ; Colocar pozos
  ask patches with [not es-salida?] [
    if random-float 1.0 < pit-prob [
      set tiene-pozo? true
      set pcolor blue
    ]
  ]
  
  ; Configurar visualización de patches
  ask patches [
    set plabel-color black
    set plabel ""
    ; Agregar borde sutil
    ifelse pxcor = 0 or pxcor = (max-pxcor) or pycor = 0 or pycor = (max-pycor) [
      set pcolor pcolor - 1.5
    ] [
      set pcolor pcolor
    ]
  ]
  
  ; Colocar Wumpus (evitar salida y pozos)
  let posibles-wumpus patches with [not tiene-pozo? and not es-salida?]
  if any? posibles-wumpus [
    ask one-of posibles-wumpus [
      set tiene-wumpus? true
      set pcolor red
      sprout-wumpuses 1 [
        set vivo? true
        set shape "bug"
        set color red
        set size 1.0
      ]
    ]
  ]
  
  ; Colocar oro (evitar salida, pozos y wumpus)
  let posibles-oro patches with [not tiene-pozo? and not tiene-wumpus? and not es-salida?]
  if any? posibles-oro [
    ask one-of posibles-oro [
      set tiene-oro? true
      set pcolor yellow
    ]
  ]
  
  ; Calcular percepciones (brisa y hedor)
  ask patches [
    calcular-percepciones
  ]
end

to calcular-percepciones
  ; Brisa si hay pozo adyacente
  if any? neighbors4 with [tiene-pozo?] [
    set hay-brisa? true
  ]
  
  ; Hedor si hay wumpus adyacente
  if any? neighbors4 with [tiene-wumpus?] [
    set hay-hedor? true
  ]
  
  ; Brillo si tiene oro
  if tiene-oro? [
    set hay-brillo? true
  ]
end

; ==========================================
; CREAR AGENTE
; ==========================================

to crear-agente
  create-agentes 1 [
    setxy 0 0
    set shape "person"
    set color black
    set size 1.2
    set heading 0
    set agente-direccion 0
    
    set agente-tiene-oro? false
    set agente-tiene-flecha? true
    
    ; Inicializar memoria
    set agente-celdas-seguras (patch-set patch 0 0)
    set agente-celdas-peligrosas (patch-set)
    set agente-celdas-visitadas (patch-set patch 0 0)
    set agente-plan-ruta []
    
    ; Percepciones iniciales
    actualizar-percepciones
  ]
end

; ==========================================
; INICIAR EPISODIO
; ==========================================

to iniciar-episodio
  set episodio-actual episodios-completados + 1
  set pasos-episodio 0
  set recompensa-episodio 0
  set oro-encontrado? false
  set agente-vivo? true
  set salio-cueva? false
  
  ; Marcar salida como visitada
  ask patch 0 0 [
    set visitado? true
  ]
end

; ==========================================
; GO - EJECUTAR UN PASO
; ==========================================

to go
  if not agente-vivo? or salio-cueva? [
    finalizar-episodio
    stop
  ]
  
  ; El agente decide y actúa
  ask agentes [
    decidir-y-actuar
  ]
  
  ; Mover Wumpus si está habilitado
  if wumpus-movil and any? wumpuses with [vivo?] [
    mover-wumpus
  ]
  
  ; Incrementar contador de pasos
  set pasos-episodio pasos-episodio + 1
  set recompensa-episodio recompensa-episodio - 1 ; Costo por paso
  
  ; Verificar condiciones de fin
  verificar-estado-agente
  
  tick
  
  ; Límite de pasos por episodio
  if pasos-episodio > (grid-size * grid-size * 3) [
    set agente-vivo? false
  ]
end

; ==========================================
; DECIDIR Y ACTUAR - SELECTOR DE ESTRATEGIA
; ==========================================

to decidir-y-actuar
  actualizar-percepciones
  
  ; Seleccionar estrategia
  if current-agent-strategy = "reactivo-baseline" [
    estrategia-reactivo-baseline
  ]
  
  if current-agent-strategy = "reactivo-heuristico" [
    estrategia-reactivo-heuristico
  ]
  
  if current-agent-strategy = "modelo-interno" [
    estrategia-modelo-interno
  ]
end

; ==========================================
; ESTRATEGIA 1: REACTIVO BASELINE
; ==========================================

to estrategia-reactivo-baseline
  ; Recoger oro si está disponible
  if agente-percibe-brillo? and not agente-tiene-oro? [
    recoger-oro
    stop
  ]
  
  ; Si tiene oro, intentar volver a la salida
  if agente-tiene-oro? [
    if [es-salida?] of patch-here [
      salir-cueva
      stop
    ]
    ; Moverse hacia la salida (dirección general)
    let distancia-x pxcor
    let distancia-y pycor
    ifelse distancia-x > distancia-y [
      girar-hacia 3 ; oeste
    ] [
      girar-hacia 2 ; sur
    ]
    mover-adelante
    stop
  ]
  
  ; Disparar si percibe hedor y tiene flecha
  if agente-percibe-hedor? and agente-tiene-flecha? [
    disparar-flecha
    stop
  ]
  
  ; Evitar peligros obvios: si percibe brisa o hedor, no avanzar
  if agente-percibe-brisa? or agente-percibe-hedor? [
    ; Girar en dirección aleatoria
    girar-hacia random 4
  ]
  
  ; Intentar moverse
  ifelse puede-mover-adelante? [
    mover-adelante
  ] [
    ; Si no puede, girar
    girar-hacia random 4
  ]
end

; ==========================================
; ESTRATEGIA 2: REACTIVO HEURÍSTICO
; ==========================================

to estrategia-reactivo-heuristico
  ; Recoger oro si está disponible
  if agente-percibe-brillo? and not agente-tiene-oro? [
    recoger-oro
    stop
  ]
  
  ; Si tiene oro, volver a la salida por camino conocido
  if agente-tiene-oro? [
    if [es-salida?] of patch-here [
      salir-cueva
      stop
    ]
    ; Moverse hacia la salida
    volver-a-salida-heuristico
    stop
  ]
  
  ; Disparar al Wumpus si tiene flecha y hay hedor
  if agente-percibe-hedor? and agente-tiene-flecha? [
    disparar-direccion-wumpus
    stop
  ]
  
  ; Buscar mejor movimiento heurístico
  let mejor-celda elegir-mejor-celda-heuristica
  
  if mejor-celda != nobody [
    moverse-hacia mejor-celda
  ]
end

to-report elegir-mejor-celda-heuristica
  ; Evaluar celdas adyacentes
  let candidatas neighbors4 with [not visitado?]
  
  if not any? candidatas [
    ; Si no hay candidatas, retroceder
    report one-of neighbors4 with [visitado?]
  ]
  
  ; Calcular score heurístico para cada celda
  let mejor-score -9999
  let mejor-celda nobody
  
  ask candidatas [
    let score calcular-score-heuristico
    if score > mejor-score [
      set mejor-score score
      set mejor-celda self
    ]
  ]
  
  report mejor-celda
end

to-report calcular-score-heuristico
  let score 0
  
  ; Penalizar si tiene señales de peligro
  if hay-brisa? [ set score score - 50 ]
  if hay-hedor? [ set score score - 30 ]
  
  ; Bonus si no ha sido visitado
  if not visitado? [ set score score + 20 ]
  
  ; Bonus por estar lejos de la salida (exploración)
  let distancia-salida distancexy 0 0
  set score score + distancia-salida * 5
  
  ; Penalizar si está en el borde
  if pxcor = 0 or pxcor = (max-pxcor) or pycor = 0 or pycor = (max-pycor) [
    set score score - 10
  ]
  
  report score
end

to volver-a-salida-heuristico
  ; Movimiento simple hacia la salida
  let distancia-x pxcor
  let distancia-y pycor
  
  ifelse distancia-x >= distancia-y [
    ; Priorizar movimiento en x
    ifelse distancia-x > 0 [
      girar-hacia 3 ; oeste
    ] [
      girar-hacia 2 ; sur
    ]
  ] [
    ; Priorizar movimiento en y
    ifelse distancia-y > 0 [
      girar-hacia 2 ; sur
    ] [
      girar-hacia 3 ; oeste
    ]
  ]
  
  mover-adelante
end

to disparar-direccion-wumpus
  ; Disparar en dirección donde probablemente está el Wumpus
  let direcciones-con-hedor []
  
  ask neighbors4 [
    if tiene-wumpus? [
      let dir-disparo hacia-direccion myself self
      set direcciones-con-hedor lput dir-disparo direcciones-con-hedor
    ]
  ]
  
  ifelse length direcciones-con-hedor > 0 [
    girar-hacia first direcciones-con-hedor
    disparar-flecha
  ] [
    ; Disparar en dirección actual
    disparar-flecha
  ]
end

to-report hacia-direccion [origen destino]
  let delta-x [pxcor] of destino - [pxcor] of origen
  let delta-y [pycor] of destino - [pycor] of origen
  
  if delta-x > 0 [ report 1 ] ; este
  if delta-x < 0 [ report 3 ] ; oeste
  if delta-y > 0 [ report 0 ] ; norte
  if delta-y < 0 [ report 2 ] ; sur
  report 0
end

; ==========================================
; ESTRATEGIA 3: MODELO INTERNO
; ==========================================

to estrategia-modelo-interno
  ; Actualizar modelo del mundo
  actualizar-modelo-mundo
  
  ; Recoger oro si está disponible
  if agente-percibe-brillo? and not agente-tiene-oro? [
    recoger-oro
    set oro-encontrado? true
    stop
  ]
  
  ; Si tiene oro, planificar ruta a la salida
  if agente-tiene-oro? [
    if [es-salida?] of patch-here [
      salir-cueva
      stop
    ]
    
    ; Usar A* para volver
    if length agente-plan-ruta = 0 [
      set agente-plan-ruta planificar-ruta-astar patch-here patch 0 0
    ]
    
    ; Seguir plan
    if length agente-plan-ruta > 0 [
      let siguiente-celda first agente-plan-ruta
      moverse-hacia siguiente-celda
      set agente-plan-ruta but-first agente-plan-ruta
    ]
    stop
  ]
  
  ; Disparar al Wumpus si es detectado y tenemos flecha
  if agente-percibe-hedor? and agente-tiene-flecha? [
    let pos-wumpus inferir-posicion-wumpus
    if pos-wumpus != nobody [
      disparar-hacia-celda pos-wumpus
      stop
    ]
  ]
  
  ; Explorar: buscar celda segura más prometedora
  let objetivo buscar-celda-segura-objetivo
  
  if objetivo != nobody [
    ; Planificar ruta si no existe
    if length agente-plan-ruta = 0 or [visitado?] of objetivo [
      set agente-plan-ruta planificar-ruta-astar patch-here objetivo
    ]
    
    ; Seguir plan
    if length agente-plan-ruta > 0 [
      let siguiente-celda first agente-plan-ruta
      moverse-hacia siguiente-celda
      set agente-plan-ruta but-first agente-plan-ruta
    ]
  ]
end

to actualizar-modelo-mundo
  ; Marcar celda actual como segura y visitada
  ask patch-here [
    set celda-segura? true
    set visitado? true
  ]
  
  set agente-celdas-visitadas (patch-set agente-celdas-visitadas patch-here)
  set agente-celdas-seguras (patch-set agente-celdas-seguras patch-here)
  
  ; Actualizar creencias sobre celdas adyacentes
  if not agente-percibe-brisa? and not agente-percibe-hedor? [
    ; Si no hay percepciones, las adyacentes son seguras
    ask neighbors4 [
      set celda-segura? true
      set probabilidad-pozo 0
      set probabilidad-wumpus 0
    ]
    set agente-celdas-seguras (patch-set agente-celdas-seguras neighbors4)
  ]
  
  if agente-percibe-brisa? [
    ; Hay un pozo en alguna adyacente no visitada
    ask neighbors4 with [not visitado?] [
      set probabilidad-pozo probabilidad-pozo + 0.3
    ]
  ]
  
  if agente-percibe-hedor? [
    ; Hay wumpus en alguna adyacente
    ask neighbors4 with [not visitado?] [
      set probabilidad-wumpus probabilidad-wumpus + 0.4
    ]
  ]
end

to-report buscar-celda-segura-objetivo
  ; Buscar celdas seguras no visitadas
  let seguras-no-visitadas agente-celdas-seguras with [not visitado?]
  
  ifelse any? seguras-no-visitadas [
    ; Elegir la más cercana al oro estimado o más lejana a la salida
    report min-one-of seguras-no-visitadas [distancexy 0 0]
  ] [
    ; Si no hay seguras, buscar con menor probabilidad de peligro
    let candidatas patches with [
      not visitado? and
      probabilidad-pozo < 0.5 and
      probabilidad-wumpus < 0.5
    ]
    
    ifelse any? candidatas [
      report min-one-of candidatas [probabilidad-pozo + probabilidad-wumpus]
    ] [
      ; Último recurso: retroceder
      report one-of agente-celdas-visitadas
    ]
  ]
end

to-report inferir-posicion-wumpus
  ; Buscar celdas adyacentes con alta probabilidad de Wumpus
  let candidatas neighbors4 with [probabilidad-wumpus > 0.3]
  
  ifelse any? candidatas [
    report max-one-of candidatas [probabilidad-wumpus]
  ] [
    report nobody
  ]
end

to disparar-hacia-celda [celda-objetivo]
  if celda-objetivo = nobody [ stop ]
  
  let dir hacia-direccion patch-here celda-objetivo
  girar-hacia dir
  disparar-flecha
end

; ==========================================
; FUNCIONES AUXILIARES PARA TABLAS
; ==========================================

to-report obtener-valor-tabla [tabla clave]
  let entradas filter [x -> first x = clave] tabla
  ifelse empty? entradas [
    report 0
  ] [
    report last (first entradas)
  ]
end

to-report tiene-clave-tabla? [tabla clave]
  report not empty? (filter [x -> first x = clave] tabla)
end

to-report actualizar-valor-tabla [tabla clave valor]
  let nueva-tabla filter [x -> first x != clave] tabla
  report lput (list clave valor) nueva-tabla
end

; ==========================================
; A* PATHFINDING
; ==========================================

to-report planificar-ruta-astar [origen destino]
  if origen = destino [ report [] ]
  
  let abiertos (patch-set origen)
  let cerrados (patch-set)
  let padres []
  let g-score []
  let f-score []
  
  set padres lput (list origen nobody) padres
  set g-score lput (list origen 0) g-score
  set f-score lput (list origen distancia-manhattan origen destino) f-score
  
  while [any? abiertos] [
    ; Elegir nodo con menor f-score
    let actual min-one-of abiertos [obtener-valor-tabla f-score self]
    
    if actual = destino [
      ; Reconstruir camino
      report reconstruir-camino padres actual
    ]
    
    set abiertos abiertos with [self != actual]
    set cerrados (patch-set cerrados actual)
    
    ; Explorar vecinos
    ask [neighbors4] of actual [
      if not member? self cerrados and [celda-segura?] of self [
        let tentative-g obtener-valor-tabla g-score actual + 1
        
        if not member? self abiertos [
          set abiertos (patch-set abiertos self)
        ]
        
        if not tiene-clave-tabla? g-score self or tentative-g < obtener-valor-tabla g-score self [
          set padres actualizar-valor-tabla padres self actual
          set g-score actualizar-valor-tabla g-score self tentative-g
          set f-score actualizar-valor-tabla f-score self (tentative-g + distancia-manhattan self destino)
        ]
      ]
    ]
  ]
  
  ; No se encontró camino
  report []
end

to-report distancia-manhattan [p1 p2]
  report abs ([pxcor] of p1 - [pxcor] of p2) + abs ([pycor] of p1 - [pycor] of p2)
end

to-report reconstruir-camino [padres nodo-actual]
  let camino []
  
  while [tiene-clave-tabla? padres nodo-actual] [
    set camino fput nodo-actual camino
    set nodo-actual obtener-valor-tabla padres nodo-actual
  ]
  
  report camino
end

; ==========================================
; ACCIONES BÁSICAS DEL AGENTE
; ==========================================

to actualizar-percepciones
  set agente-percibe-brisa? [hay-brisa?] of patch-here
  set agente-percibe-hedor? [hay-hedor?] of patch-here
  set agente-percibe-brillo? [hay-brillo?] of patch-here
  set agente-percibe-choque? false
  
  ; Mostrar percepciones visualmente
  ask patch-here [
    if hay-brisa? [
      set plabel "B" ; Brisa
      set plabel-color blue
    ]
    if hay-hedor? [
      set plabel word plabel "H" ; Hedor
      set plabel-color red
    ]
    if hay-brillo? [
      set plabel word plabel "G" ; Gold/Oro
      set plabel-color yellow
    ]
  ]
end

to recoger-oro
  if [tiene-oro?] of patch-here [
    set agente-tiene-oro? true
    set oro-encontrado? true
    set recompensa-episodio recompensa-episodio + 1000
    
    ask patch-here [
      set tiene-oro? false
      set hay-brillo? false
    ]
  ]
end

to salir-cueva
  if [es-salida?] of patch-here [
    set salio-cueva? true
    
    ifelse agente-tiene-oro? [
      set recompensa-episodio recompensa-episodio + 100
    ] [
      set recompensa-episodio recompensa-episodio - 10
    ]
  ]
end

to disparar-flecha
  if agente-tiene-flecha? [
    set agente-tiene-flecha? false
    set recompensa-episodio recompensa-episodio - 10
    set flechas-usadas-total flechas-usadas-total + 1
    
    ; Verificar si mata al Wumpus
    let celda-objetivo patch-ahead 1
    
    if celda-objetivo != nobody [
      ask celda-objetivo [
        if tiene-wumpus? and any? wumpuses-here with [vivo?] [
          ask wumpuses-here [
            set vivo? false
            die
          ]
          ask myself [ set agente-percibe-grito? true ]
          
          ; Eliminar hedor
          ask patches [
            set hay-hedor? false
          ]
        ]
      ]
    ]
  ]
end

to girar-hacia [nueva-dir]
  set agente-direccion nueva-dir
  set heading nueva-dir * 90
end

to mover-adelante
  let destino patch-ahead 1
  
  if destino != nobody [
    ; Limpiar etiquetas de la celda actual
    ask patch-here [
      set plabel ""
    ]
    
    move-to destino
    ask patch-here [
      set visitado? true
      ; Marcar celda visitada con un color más claro
      if not tiene-pozo? and not tiene-wumpus? and not tiene-oro? and not es-salida? [
        set pcolor pcolor + 1.5
      ]
    ]
  ]
end

to-report puede-mover-adelante?
  let destino patch-ahead 1
  report destino != nobody
end

to moverse-hacia [celda-destino]
  if celda-destino = nobody [ stop ]
  
  face celda-destino
  
  ; Ajustar dirección
  let angulo towards celda-destino
  if angulo >= 315 or angulo < 45 [ girar-hacia 0 ]
  if angulo >= 45 and angulo < 135 [ girar-hacia 1 ]
  if angulo >= 135 and angulo < 225 [ girar-hacia 2 ]
  if angulo >= 225 and angulo < 315 [ girar-hacia 3 ]
  
  mover-adelante
end

; ==========================================
; VERIFICAR ESTADO DEL AGENTE
; ==========================================

to verificar-estado-agente
  ask agentes [
    ; Verificar muerte por pozo
    if [tiene-pozo?] of patch-here [
      set agente-vivo? false
      set recompensa-episodio recompensa-episodio - 1000
      set muertes-pozo muertes-pozo + 1
      die
    ]
    
    ; Verificar muerte por Wumpus
    if [tiene-wumpus?] of patch-here and any? wumpuses-here with [vivo?] [
      set agente-vivo? false
      set recompensa-episodio recompensa-episodio - 1000
      set muertes-wumpus muertes-wumpus + 1
      die
    ]
  ]
end

; ==========================================
; MOVER WUMPUS (OPCIONAL)
; ==========================================

to mover-wumpus
  ask wumpuses with [vivo?] [
    if random-float 1.0 < 0.2 [ ; 20% de probabilidad de moverse
      let destino one-of neighbors4 with [not tiene-pozo? and not es-salida?]
      
      if destino != nobody [
        ; Mover Wumpus
        ask patch-here [
          set tiene-wumpus? false
          if pcolor = red [ set pcolor white ]
        ]
        
        move-to destino
        
        ask patch-here [
          set tiene-wumpus? true
          set pcolor red
        ]
        
        ; Recalcular hedores
        ask patches [ set hay-hedor? false ]
        ask patches [
          if any? neighbors4 with [tiene-wumpus?] [
            set hay-hedor? true
          ]
        ]
      ]
    ]
  ]
end

; ==========================================
; FINALIZAR EPISODIO
; ==========================================

to finalizar-episodio
  ; Actualizar métricas globales
  set episodios-completados episodios-completados + 1
  
  if oro-encontrado? and salio-cueva? [
    set exitos-totales exitos-totales + 1
    set oro-recolectado oro-recolectado + 1
  ]
  
  set recompensa-acumulada recompensa-acumulada + recompensa-episodio
  set pasos-acumulados pasos-acumulados + pasos-episodio
  
  ; Agregar a listas
  set lista-recompensas lput recompensa-episodio lista-recompensas
  set lista-pasos lput pasos-episodio lista-pasos
  set lista-exitos lput (ifelse-value (oro-encontrado? and salio-cueva?) [1] [0]) lista-exitos
  
  ; Preparar siguiente episodio si está en modo batch
  if episodios-completados < num-episodios [
    setup
  ]
end

; ==========================================
; REPORTES Y MÉTRICAS
; ==========================================

to-report tasa-exito
  ifelse episodios-completados > 0 [
    report (exitos-totales / episodios-completados) * 100
  ] [
    report 0
  ]
end

to-report recompensa-promedio
  ifelse episodios-completados > 0 [
    report recompensa-acumulada / episodios-completados
  ] [
    report 0
  ]
end

to-report pasos-promedio
  ifelse episodios-completados > 0 [
    report pasos-acumulados / episodios-completados
  ] [
    report 0
  ]
end

to-report porcentaje-muertes-pozo
  ifelse episodios-completados > 0 [
    report (muertes-pozo / episodios-completados) * 100
  ] [
    report 0
  ]
end

to-report porcentaje-muertes-wumpus
  ifelse episodios-completados > 0 [
    report (muertes-wumpus / episodios-completados) * 100
  ] [
    report 0
  ]
end

; ==========================================
; RESETEAR MÉTRICAS
; ==========================================

to reset-metrics
  set episodios-completados 0
  set exitos-totales 0
  set muertes-pozo 0
  set muertes-wumpus 0
  set oro-recolectado 0
  set recompensa-acumulada 0
  set pasos-acumulados 0
  set flechas-usadas-total 0
  
  set lista-recompensas []
  set lista-pasos []
  set lista-exitos []
end

; ==========================================
; EJECUTAR EXPERIMENTOS
; ==========================================

to run-experiments
  reset-metrics
  
  repeat num-episodios [
    setup
    while [agente-vivo? and not salio-cueva? and pasos-episodio < (grid-size * grid-size * 3)] [
      go
    ]
    if not salio-cueva? [ finalizar-episodio ]
  ]
  
  ; Mostrar resultados finales
  print (word "=== RESULTADOS FINALES ===")
  print (word "Estrategia: " current-agent-strategy)
  print (word "Episodios: " episodios-completados)
  print (word "Tasa de éxito: " precision tasa-exito 2 "%")
  print (word "Recompensa promedio: " precision recompensa-promedio 2)
  print (word "Pasos promedio: " precision pasos-promedio 2)
  print (word "Muertes por pozo: " precision porcentaje-muertes-pozo 2 "%")
  print (word "Muertes por Wumpus: " precision porcentaje-muertes-wumpus 2 "%")
  print (word "Flechas usadas: " flechas-usadas-total)
end]]></code>
  <widgets>
    <view x="368" wrappingAllowedX="true" y="10" frameRate="30.0" minPycor="0" height="749" showTickCounter="true" patchSize="30.0" fontSize="10" wrappingAllowedY="true" width="749" tickCounterLabel="ticks" maxPycor="24" updateMode="0" maxPxcor="24" minPxcor="0"></view>
    <slider x="40" step="1" y="40" max="100" width="250" display="grid-size" height="50" min="0" direction="Horizontal" default="25.0" variable="grid-size"></slider>
    <slider x="40" step="0.05" y="170" max="0.3" width="250" display="pit-prob" height="50" min="0" direction="Horizontal" default="0.05" variable="pit-prob"></slider>
    <slider x="40" step="1" y="105" max="100" width="250" display="seed" height="50" min="0" direction="Horizontal" default="21.0" variable="seed"></slider>
    <chooser x="1130" y="25" height="60" variable="current-agent-strategy" current="1" width="250" display="current-agent-strategy">
      <choice type="string" value="reactivo-baseline"></choice>
      <choice type="string" value="reactivo-heuristico"></choice>
      <choice type="string" value="modelo-interno"></choice>
    </chooser>
    <slider x="1130" step="1" y="95" max="100" width="250" display="num-episodios" height="50" min="0" direction="Horizontal" default="50.0" variable="num-episodios"></slider>
    <switch x="1265" y="155" height="40" on="false" variable="wumpus-movil" width="115" display="wumpus-movil"></switch>
    <button x="1145" y="445" height="40" disableUntilTicks="false" forever="false" kind="Observer" width="55" display="GO!">go</button>
    <button x="1145" y="495" height="40" disableUntilTicks="false" forever="false" kind="Observer" width="55" display="SETUP!">setup</button>
    <button x="1230" y="450" height="40" disableUntilTicks="false" forever="false" kind="Observer" width="106">run-experiments</button>
  </widgets>
  <info>## WHAT IS IT?

(a general understanding of what the model is trying to show or explain)

## HOW IT WORKS

(what rules the agents use to create the overall behavior of the model)

## HOW TO USE IT

(how to use the model, including a description of each of the items in the Interface tab)

## THINGS TO NOTICE

(suggested things for the user to notice while running the model)

## THINGS TO TRY

(suggested things for the user to try to do (move sliders, switches, etc.) with the model)

## EXTENDING THE MODEL

(suggested things to add or change in the Code tab to make the model more complicated, detailed, accurate, etc.)

## NETLOGO FEATURES

(interesting or unusual features of NetLogo that the model uses, particularly in the Code tab; or where workarounds were needed for missing features)

## RELATED MODELS

(models in the NetLogo Models Library and elsewhere which are of related interest)

## CREDITS AND REFERENCES

(a reference to the model's URL on the web if it has one, as well as any other necessary credits, citations, and links)
</info>
  <turtleShapes>
    <shape name="default" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="5"></point>
        <point x="40" y="250"></point>
        <point x="150" y="205"></point>
        <point x="260" y="250"></point>
      </polygon>
    </shape>
    <shape name="airplane" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="0"></point>
        <point x="135" y="15"></point>
        <point x="120" y="60"></point>
        <point x="120" y="105"></point>
        <point x="15" y="165"></point>
        <point x="15" y="195"></point>
        <point x="120" y="180"></point>
        <point x="135" y="240"></point>
        <point x="105" y="270"></point>
        <point x="120" y="285"></point>
        <point x="150" y="270"></point>
        <point x="180" y="285"></point>
        <point x="210" y="270"></point>
        <point x="165" y="240"></point>
        <point x="180" y="180"></point>
        <point x="285" y="195"></point>
        <point x="285" y="165"></point>
        <point x="180" y="105"></point>
        <point x="180" y="60"></point>
        <point x="165" y="15"></point>
      </polygon>
    </shape>
    <shape name="arrow" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="0"></point>
        <point x="0" y="150"></point>
        <point x="105" y="150"></point>
        <point x="105" y="293"></point>
        <point x="195" y="293"></point>
        <point x="195" y="150"></point>
        <point x="300" y="150"></point>
      </polygon>
    </shape>
    <shape name="box" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="285"></point>
        <point x="285" y="225"></point>
        <point x="285" y="75"></point>
        <point x="150" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="135"></point>
        <point x="15" y="75"></point>
        <point x="150" y="15"></point>
        <point x="285" y="75"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="15" y="75"></point>
        <point x="15" y="225"></point>
        <point x="150" y="285"></point>
        <point x="150" y="135"></point>
      </polygon>
      <line endX="150" startY="285" marked="false" color="255" endY="135" startX="150"></line>
      <line endX="15" startY="135" marked="false" color="255" endY="75" startX="150"></line>
      <line endX="285" startY="135" marked="false" color="255" endY="75" startX="150"></line>
    </shape>
    <shape name="bug" rotatable="true" editableColorIndex="0">
      <circle x="96" y="182" marked="true" color="-1920102913" diameter="108" filled="true"></circle>
      <circle x="110" y="127" marked="true" color="-1920102913" diameter="80" filled="true"></circle>
      <circle x="110" y="75" marked="true" color="-1920102913" diameter="80" filled="true"></circle>
      <line endX="80" startY="100" marked="true" color="-1920102913" endY="30" startX="150"></line>
      <line endX="220" startY="100" marked="true" color="-1920102913" endY="30" startX="150"></line>
    </shape>
    <shape name="butterfly" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="165"></point>
        <point x="209" y="199"></point>
        <point x="225" y="225"></point>
        <point x="225" y="255"></point>
        <point x="195" y="270"></point>
        <point x="165" y="255"></point>
        <point x="150" y="240"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="165"></point>
        <point x="89" y="198"></point>
        <point x="75" y="225"></point>
        <point x="75" y="255"></point>
        <point x="105" y="270"></point>
        <point x="135" y="255"></point>
        <point x="150" y="240"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="139" y="148"></point>
        <point x="100" y="105"></point>
        <point x="55" y="90"></point>
        <point x="25" y="90"></point>
        <point x="10" y="105"></point>
        <point x="10" y="135"></point>
        <point x="25" y="180"></point>
        <point x="40" y="195"></point>
        <point x="85" y="194"></point>
        <point x="139" y="163"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="162" y="150"></point>
        <point x="200" y="105"></point>
        <point x="245" y="90"></point>
        <point x="275" y="90"></point>
        <point x="290" y="105"></point>
        <point x="290" y="135"></point>
        <point x="275" y="180"></point>
        <point x="260" y="195"></point>
        <point x="215" y="195"></point>
        <point x="162" y="165"></point>
      </polygon>
      <polygon color="255" filled="true" marked="false">
        <point x="150" y="255"></point>
        <point x="135" y="225"></point>
        <point x="120" y="150"></point>
        <point x="135" y="120"></point>
        <point x="150" y="105"></point>
        <point x="165" y="120"></point>
        <point x="180" y="150"></point>
        <point x="165" y="225"></point>
      </polygon>
      <circle x="135" y="90" marked="false" color="255" diameter="30" filled="true"></circle>
      <line endX="195" startY="105" marked="false" color="255" endY="60" startX="150"></line>
      <line endX="105" startY="105" marked="false" color="255" endY="60" startX="150"></line>
    </shape>
    <shape name="car" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="300" y="180"></point>
        <point x="279" y="164"></point>
        <point x="261" y="144"></point>
        <point x="240" y="135"></point>
        <point x="226" y="132"></point>
        <point x="213" y="106"></point>
        <point x="203" y="84"></point>
        <point x="185" y="63"></point>
        <point x="159" y="50"></point>
        <point x="135" y="50"></point>
        <point x="75" y="60"></point>
        <point x="0" y="150"></point>
        <point x="0" y="165"></point>
        <point x="0" y="225"></point>
        <point x="300" y="225"></point>
        <point x="300" y="180"></point>
      </polygon>
      <circle x="180" y="180" marked="false" color="255" diameter="90" filled="true"></circle>
      <circle x="30" y="180" marked="false" color="255" diameter="90" filled="true"></circle>
      <polygon color="255" filled="true" marked="false">
        <point x="162" y="80"></point>
        <point x="132" y="78"></point>
        <point x="134" y="135"></point>
        <point x="209" y="135"></point>
        <point x="194" y="105"></point>
        <point x="189" y="96"></point>
        <point x="180" y="89"></point>
      </polygon>
      <circle x="47" y="195" marked="true" color="-1920102913" diameter="58" filled="true"></circle>
      <circle x="195" y="195" marked="true" color="-1920102913" diameter="58" filled="true"></circle>
    </shape>
    <shape name="circle" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
    </shape>
    <shape name="circle 2" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
      <circle x="30" y="30" marked="false" color="255" diameter="240" filled="true"></circle>
    </shape>
    <shape name="cow" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="200" y="193"></point>
        <point x="197" y="249"></point>
        <point x="179" y="249"></point>
        <point x="177" y="196"></point>
        <point x="166" y="187"></point>
        <point x="140" y="189"></point>
        <point x="93" y="191"></point>
        <point x="78" y="179"></point>
        <point x="72" y="211"></point>
        <point x="49" y="209"></point>
        <point x="48" y="181"></point>
        <point x="37" y="149"></point>
        <point x="25" y="120"></point>
        <point x="25" y="89"></point>
        <point x="45" y="72"></point>
        <point x="103" y="84"></point>
        <point x="179" y="75"></point>
        <point x="198" y="76"></point>
        <point x="252" y="64"></point>
        <point x="272" y="81"></point>
        <point x="293" y="103"></point>
        <point x="285" y="121"></point>
        <point x="255" y="121"></point>
        <point x="242" y="118"></point>
        <point x="224" y="167"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="73" y="210"></point>
        <point x="86" y="251"></point>
        <point x="62" y="249"></point>
        <point x="48" y="208"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="25" y="114"></point>
        <point x="16" y="195"></point>
        <point x="9" y="204"></point>
        <point x="23" y="213"></point>
        <point x="25" y="200"></point>
        <point x="39" y="123"></point>
      </polygon>
    </shape>
    <shape name="cylinder" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
    </shape>
    <shape name="dot" rotatable="false" editableColorIndex="0">
      <circle x="90" y="90" marked="true" color="-1920102913" diameter="120" filled="true"></circle>
    </shape>
    <shape name="face happy" rotatable="false" editableColorIndex="0">
      <circle x="8" y="8" marked="true" color="-1920102913" diameter="285" filled="true"></circle>
      <circle x="60" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <circle x="180" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <polygon color="255" filled="true" marked="false">
        <point x="150" y="255"></point>
        <point x="90" y="239"></point>
        <point x="62" y="213"></point>
        <point x="47" y="191"></point>
        <point x="67" y="179"></point>
        <point x="90" y="203"></point>
        <point x="109" y="218"></point>
        <point x="150" y="225"></point>
        <point x="192" y="218"></point>
        <point x="210" y="203"></point>
        <point x="227" y="181"></point>
        <point x="251" y="194"></point>
        <point x="236" y="217"></point>
        <point x="212" y="240"></point>
      </polygon>
    </shape>
    <shape name="face neutral" rotatable="false" editableColorIndex="0">
      <circle x="8" y="7" marked="true" color="-1920102913" diameter="285" filled="true"></circle>
      <circle x="60" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <circle x="180" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <rectangle endX="240" startY="195" marked="false" color="255" endY="225" startX="60" filled="true"></rectangle>
    </shape>
    <shape name="face sad" rotatable="false" editableColorIndex="0">
      <circle x="8" y="8" marked="true" color="-1920102913" diameter="285" filled="true"></circle>
      <circle x="60" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <circle x="180" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <polygon color="255" filled="true" marked="false">
        <point x="150" y="168"></point>
        <point x="90" y="184"></point>
        <point x="62" y="210"></point>
        <point x="47" y="232"></point>
        <point x="67" y="244"></point>
        <point x="90" y="220"></point>
        <point x="109" y="205"></point>
        <point x="150" y="198"></point>
        <point x="192" y="205"></point>
        <point x="210" y="220"></point>
        <point x="227" y="242"></point>
        <point x="251" y="229"></point>
        <point x="236" y="206"></point>
        <point x="212" y="183"></point>
      </polygon>
    </shape>
    <shape name="fish" rotatable="false" editableColorIndex="0">
      <polygon color="-1" filled="true" marked="false">
        <point x="44" y="131"></point>
        <point x="21" y="87"></point>
        <point x="15" y="86"></point>
        <point x="0" y="120"></point>
        <point x="15" y="150"></point>
        <point x="0" y="180"></point>
        <point x="13" y="214"></point>
        <point x="20" y="212"></point>
        <point x="45" y="166"></point>
      </polygon>
      <polygon color="-1" filled="true" marked="false">
        <point x="135" y="195"></point>
        <point x="119" y="235"></point>
        <point x="95" y="218"></point>
        <point x="76" y="210"></point>
        <point x="46" y="204"></point>
        <point x="60" y="165"></point>
      </polygon>
      <polygon color="-1" filled="true" marked="false">
        <point x="75" y="45"></point>
        <point x="83" y="77"></point>
        <point x="71" y="103"></point>
        <point x="86" y="114"></point>
        <point x="166" y="78"></point>
        <point x="135" y="60"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="30" y="136"></point>
        <point x="151" y="77"></point>
        <point x="226" y="81"></point>
        <point x="280" y="119"></point>
        <point x="292" y="146"></point>
        <point x="292" y="160"></point>
        <point x="287" y="170"></point>
        <point x="270" y="195"></point>
        <point x="195" y="210"></point>
        <point x="151" y="212"></point>
        <point x="30" y="166"></point>
      </polygon>
      <circle x="215" y="106" marked="false" color="255" diameter="30" filled="true"></circle>
    </shape>
    <shape name="flag" rotatable="false" editableColorIndex="0">
      <rectangle endX="75" startY="15" marked="true" color="-1920102913" endY="300" startX="60" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="90" y="150"></point>
        <point x="270" y="90"></point>
        <point x="90" y="30"></point>
      </polygon>
      <line endX="90" startY="135" marked="true" color="-1920102913" endY="135" startX="75"></line>
      <line endX="90" startY="45" marked="true" color="-1920102913" endY="45" startX="75"></line>
    </shape>
    <shape name="flower" rotatable="false" editableColorIndex="0">
      <polygon color="1504722175" filled="true" marked="false">
        <point x="135" y="120"></point>
        <point x="165" y="165"></point>
        <point x="180" y="210"></point>
        <point x="180" y="240"></point>
        <point x="150" y="300"></point>
        <point x="165" y="300"></point>
        <point x="195" y="240"></point>
        <point x="195" y="195"></point>
        <point x="165" y="135"></point>
      </polygon>
      <circle x="85" y="132" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="130" y="147" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="192" y="85" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="85" y="40" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="177" y="40" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="177" y="132" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="70" y="85" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="130" y="25" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="96" y="51" marked="true" color="-1920102913" diameter="108" filled="true"></circle>
      <circle x="113" y="68" marked="false" color="255" diameter="74" filled="true"></circle>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="189" y="233"></point>
        <point x="219" y="188"></point>
        <point x="249" y="173"></point>
        <point x="279" y="188"></point>
        <point x="234" y="218"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="180" y="255"></point>
        <point x="150" y="210"></point>
        <point x="105" y="210"></point>
        <point x="75" y="240"></point>
        <point x="135" y="240"></point>
      </polygon>
    </shape>
    <shape name="house" rotatable="false" editableColorIndex="0">
      <rectangle endX="255" startY="120" marked="true" color="-1920102913" endY="285" startX="45" filled="true"></rectangle>
      <rectangle endX="180" startY="210" marked="false" color="255" endY="285" startX="120" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="15" y="120"></point>
        <point x="150" y="15"></point>
        <point x="285" y="120"></point>
      </polygon>
      <line endX="270" startY="120" marked="false" color="255" endY="120" startX="30"></line>
    </shape>
    <shape name="leaf" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="210"></point>
        <point x="135" y="195"></point>
        <point x="120" y="210"></point>
        <point x="60" y="210"></point>
        <point x="30" y="195"></point>
        <point x="60" y="180"></point>
        <point x="60" y="165"></point>
        <point x="15" y="135"></point>
        <point x="30" y="120"></point>
        <point x="15" y="105"></point>
        <point x="40" y="104"></point>
        <point x="45" y="90"></point>
        <point x="60" y="90"></point>
        <point x="90" y="105"></point>
        <point x="105" y="120"></point>
        <point x="120" y="120"></point>
        <point x="105" y="60"></point>
        <point x="120" y="60"></point>
        <point x="135" y="30"></point>
        <point x="150" y="15"></point>
        <point x="165" y="30"></point>
        <point x="180" y="60"></point>
        <point x="195" y="60"></point>
        <point x="180" y="120"></point>
        <point x="195" y="120"></point>
        <point x="210" y="105"></point>
        <point x="240" y="90"></point>
        <point x="255" y="90"></point>
        <point x="263" y="104"></point>
        <point x="285" y="105"></point>
        <point x="270" y="120"></point>
        <point x="285" y="135"></point>
        <point x="240" y="165"></point>
        <point x="240" y="180"></point>
        <point x="270" y="195"></point>
        <point x="240" y="210"></point>
        <point x="180" y="210"></point>
        <point x="165" y="195"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="195"></point>
        <point x="135" y="240"></point>
        <point x="120" y="255"></point>
        <point x="105" y="255"></point>
        <point x="105" y="285"></point>
        <point x="135" y="285"></point>
        <point x="165" y="240"></point>
        <point x="165" y="195"></point>
      </polygon>
    </shape>
    <shape name="line" rotatable="true" editableColorIndex="0">
      <line endX="150" startY="0" marked="true" color="-1920102913" endY="300" startX="150"></line>
    </shape>
    <shape name="line half" rotatable="true" editableColorIndex="0">
      <line endX="150" startY="0" marked="true" color="-1920102913" endY="150" startX="150"></line>
    </shape>
    <shape name="pentagon" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="15"></point>
        <point x="15" y="120"></point>
        <point x="60" y="285"></point>
        <point x="240" y="285"></point>
        <point x="285" y="120"></point>
      </polygon>
    </shape>
    <shape name="person" rotatable="false" editableColorIndex="0">
      <circle x="110" y="5" marked="true" color="-1920102913" diameter="80" filled="true"></circle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="105" y="90"></point>
        <point x="120" y="195"></point>
        <point x="90" y="285"></point>
        <point x="105" y="300"></point>
        <point x="135" y="300"></point>
        <point x="150" y="225"></point>
        <point x="165" y="300"></point>
        <point x="195" y="300"></point>
        <point x="210" y="285"></point>
        <point x="180" y="195"></point>
        <point x="195" y="90"></point>
      </polygon>
      <rectangle endX="172" startY="79" marked="true" color="-1920102913" endY="94" startX="127" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="195" y="90"></point>
        <point x="240" y="150"></point>
        <point x="225" y="180"></point>
        <point x="165" y="105"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="105" y="90"></point>
        <point x="60" y="150"></point>
        <point x="75" y="180"></point>
        <point x="135" y="105"></point>
      </polygon>
    </shape>
    <shape name="plant" rotatable="false" editableColorIndex="0">
      <rectangle endX="165" startY="90" marked="true" color="-1920102913" endY="300" startX="135" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="255"></point>
        <point x="90" y="210"></point>
        <point x="45" y="195"></point>
        <point x="75" y="255"></point>
        <point x="135" y="285"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="255"></point>
        <point x="210" y="210"></point>
        <point x="255" y="195"></point>
        <point x="225" y="255"></point>
        <point x="165" y="285"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="180"></point>
        <point x="90" y="135"></point>
        <point x="45" y="120"></point>
        <point x="75" y="180"></point>
        <point x="135" y="210"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="180"></point>
        <point x="165" y="210"></point>
        <point x="225" y="180"></point>
        <point x="255" y="120"></point>
        <point x="210" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="105"></point>
        <point x="90" y="60"></point>
        <point x="45" y="45"></point>
        <point x="75" y="105"></point>
        <point x="135" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="105"></point>
        <point x="165" y="135"></point>
        <point x="225" y="105"></point>
        <point x="255" y="45"></point>
        <point x="210" y="60"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="90"></point>
        <point x="120" y="45"></point>
        <point x="150" y="15"></point>
        <point x="180" y="45"></point>
        <point x="165" y="90"></point>
      </polygon>
    </shape>
    <shape name="sheep" rotatable="false" editableColorIndex="15">
      <circle x="203" y="65" marked="true" color="-1" diameter="88" filled="true"></circle>
      <circle x="70" y="65" marked="true" color="-1" diameter="162" filled="true"></circle>
      <circle x="150" y="105" marked="true" color="-1" diameter="120" filled="true"></circle>
      <polygon color="-1920102913" filled="true" marked="false">
        <point x="218" y="120"></point>
        <point x="240" y="165"></point>
        <point x="255" y="165"></point>
        <point x="278" y="120"></point>
      </polygon>
      <circle x="214" y="72" marked="false" color="-1920102913" diameter="67" filled="true"></circle>
      <rectangle endX="179" startY="223" marked="true" color="-1" endY="298" startX="164" filled="true"></rectangle>
      <polygon color="-1" filled="true" marked="true">
        <point x="45" y="285"></point>
        <point x="30" y="285"></point>
        <point x="30" y="240"></point>
        <point x="15" y="195"></point>
        <point x="45" y="210"></point>
      </polygon>
      <circle x="3" y="83" marked="true" color="-1" diameter="150" filled="true"></circle>
      <rectangle endX="80" startY="221" marked="true" color="-1" endY="296" startX="65" filled="true"></rectangle>
      <polygon color="-1" filled="true" marked="true">
        <point x="195" y="285"></point>
        <point x="210" y="285"></point>
        <point x="210" y="240"></point>
        <point x="240" y="210"></point>
        <point x="195" y="210"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="false">
        <point x="276" y="85"></point>
        <point x="285" y="105"></point>
        <point x="302" y="99"></point>
        <point x="294" y="83"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="false">
        <point x="219" y="85"></point>
        <point x="210" y="105"></point>
        <point x="193" y="99"></point>
        <point x="201" y="83"></point>
      </polygon>
    </shape>
    <shape name="square" rotatable="false" editableColorIndex="0">
      <rectangle endX="270" startY="30" marked="true" color="-1920102913" endY="270" startX="30" filled="true"></rectangle>
    </shape>
    <shape name="square 2" rotatable="false" editableColorIndex="0">
      <rectangle endX="270" startY="30" marked="true" color="-1920102913" endY="270" startX="30" filled="true"></rectangle>
      <rectangle endX="240" startY="60" marked="false" color="255" endY="240" startX="60" filled="true"></rectangle>
    </shape>
    <shape name="star" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="151" y="1"></point>
        <point x="185" y="108"></point>
        <point x="298" y="108"></point>
        <point x="207" y="175"></point>
        <point x="242" y="282"></point>
        <point x="151" y="216"></point>
        <point x="59" y="282"></point>
        <point x="94" y="175"></point>
        <point x="3" y="108"></point>
        <point x="116" y="108"></point>
      </polygon>
    </shape>
    <shape name="target" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
      <circle x="30" y="30" marked="false" color="255" diameter="240" filled="true"></circle>
      <circle x="60" y="60" marked="true" color="-1920102913" diameter="180" filled="true"></circle>
      <circle x="90" y="90" marked="false" color="255" diameter="120" filled="true"></circle>
      <circle x="120" y="120" marked="true" color="-1920102913" diameter="60" filled="true"></circle>
    </shape>
    <shape name="tree" rotatable="false" editableColorIndex="0">
      <circle x="118" y="3" marked="true" color="-1920102913" diameter="94" filled="true"></circle>
      <rectangle endX="180" startY="195" marked="false" color="-1653716737" endY="300" startX="120" filled="true"></rectangle>
      <circle x="65" y="21" marked="true" color="-1920102913" diameter="108" filled="true"></circle>
      <circle x="116" y="41" marked="true" color="-1920102913" diameter="127" filled="true"></circle>
      <circle x="45" y="90" marked="true" color="-1920102913" diameter="120" filled="true"></circle>
      <circle x="104" y="74" marked="true" color="-1920102913" diameter="152" filled="true"></circle>
    </shape>
    <shape name="triangle" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="30"></point>
        <point x="15" y="255"></point>
        <point x="285" y="255"></point>
      </polygon>
    </shape>
    <shape name="triangle 2" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="30"></point>
        <point x="15" y="255"></point>
        <point x="285" y="255"></point>
      </polygon>
      <polygon color="255" filled="true" marked="false">
        <point x="151" y="99"></point>
        <point x="225" y="223"></point>
        <point x="75" y="224"></point>
      </polygon>
    </shape>
    <shape name="truck" rotatable="false" editableColorIndex="0">
      <rectangle endX="195" startY="45" marked="true" color="-1920102913" endY="187" startX="4" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="296" y="193"></point>
        <point x="296" y="150"></point>
        <point x="259" y="134"></point>
        <point x="244" y="104"></point>
        <point x="208" y="104"></point>
        <point x="207" y="194"></point>
      </polygon>
      <rectangle endX="195" startY="60" marked="false" color="-1" endY="105" startX="195" filled="true"></rectangle>
      <polygon color="255" filled="true" marked="false">
        <point x="238" y="112"></point>
        <point x="252" y="141"></point>
        <point x="219" y="141"></point>
        <point x="218" y="112"></point>
      </polygon>
      <circle x="234" y="174" marked="false" color="255" diameter="42" filled="true"></circle>
      <rectangle endX="214" startY="185" marked="true" color="-1920102913" endY="194" startX="181" filled="true"></rectangle>
      <circle x="144" y="174" marked="false" color="255" diameter="42" filled="true"></circle>
      <circle x="24" y="174" marked="false" color="255" diameter="42" filled="true"></circle>
      <circle x="24" y="174" marked="true" color="-1920102913" diameter="42" filled="false"></circle>
      <circle x="144" y="174" marked="true" color="-1920102913" diameter="42" filled="false"></circle>
      <circle x="234" y="174" marked="true" color="-1920102913" diameter="42" filled="false"></circle>
    </shape>
    <shape name="turtle" rotatable="true" editableColorIndex="0">
      <polygon color="1504722175" filled="true" marked="false">
        <point x="215" y="204"></point>
        <point x="240" y="233"></point>
        <point x="246" y="254"></point>
        <point x="228" y="266"></point>
        <point x="215" y="252"></point>
        <point x="193" y="210"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="195" y="90"></point>
        <point x="225" y="75"></point>
        <point x="245" y="75"></point>
        <point x="260" y="89"></point>
        <point x="269" y="108"></point>
        <point x="261" y="124"></point>
        <point x="240" y="105"></point>
        <point x="225" y="105"></point>
        <point x="210" y="105"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="105" y="90"></point>
        <point x="75" y="75"></point>
        <point x="55" y="75"></point>
        <point x="40" y="89"></point>
        <point x="31" y="108"></point>
        <point x="39" y="124"></point>
        <point x="60" y="105"></point>
        <point x="75" y="105"></point>
        <point x="90" y="105"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="132" y="85"></point>
        <point x="134" y="64"></point>
        <point x="107" y="51"></point>
        <point x="108" y="17"></point>
        <point x="150" y="2"></point>
        <point x="192" y="18"></point>
        <point x="192" y="52"></point>
        <point x="169" y="65"></point>
        <point x="172" y="87"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="85" y="204"></point>
        <point x="60" y="233"></point>
        <point x="54" y="254"></point>
        <point x="72" y="266"></point>
        <point x="85" y="252"></point>
        <point x="107" y="210"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="119" y="75"></point>
        <point x="179" y="75"></point>
        <point x="209" y="101"></point>
        <point x="224" y="135"></point>
        <point x="220" y="225"></point>
        <point x="175" y="261"></point>
        <point x="128" y="261"></point>
        <point x="81" y="224"></point>
        <point x="74" y="135"></point>
        <point x="88" y="99"></point>
      </polygon>
    </shape>
    <shape name="wheel" rotatable="false" editableColorIndex="0">
      <circle x="3" y="3" marked="true" color="-1920102913" diameter="294" filled="true"></circle>
      <circle x="30" y="30" marked="false" color="255" diameter="240" filled="true"></circle>
      <line endX="150" startY="285" marked="true" color="-1920102913" endY="15" startX="150"></line>
      <line endX="285" startY="150" marked="true" color="-1920102913" endY="150" startX="15"></line>
      <circle x="120" y="120" marked="true" color="-1920102913" diameter="60" filled="true"></circle>
      <line endX="79" startY="40" marked="true" color="-1920102913" endY="269" startX="216"></line>
      <line endX="269" startY="84" marked="true" color="-1920102913" endY="221" startX="40"></line>
      <line endX="269" startY="216" marked="true" color="-1920102913" endY="79" startX="40"></line>
      <line endX="221" startY="40" marked="true" color="-1920102913" endY="269" startX="84"></line>
    </shape>
    <shape name="wolf" rotatable="false" editableColorIndex="0">
      <polygon color="255" filled="true" marked="false">
        <point x="253" y="133"></point>
        <point x="245" y="131"></point>
        <point x="245" y="133"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="2" y="194"></point>
        <point x="13" y="197"></point>
        <point x="30" y="191"></point>
        <point x="38" y="193"></point>
        <point x="38" y="205"></point>
        <point x="20" y="226"></point>
        <point x="20" y="257"></point>
        <point x="27" y="265"></point>
        <point x="38" y="266"></point>
        <point x="40" y="260"></point>
        <point x="31" y="253"></point>
        <point x="31" y="230"></point>
        <point x="60" y="206"></point>
        <point x="68" y="198"></point>
        <point x="75" y="209"></point>
        <point x="66" y="228"></point>
        <point x="65" y="243"></point>
        <point x="82" y="261"></point>
        <point x="84" y="268"></point>
        <point x="100" y="267"></point>
        <point x="103" y="261"></point>
        <point x="77" y="239"></point>
        <point x="79" y="231"></point>
        <point x="100" y="207"></point>
        <point x="98" y="196"></point>
        <point x="119" y="201"></point>
        <point x="143" y="202"></point>
        <point x="160" y="195"></point>
        <point x="166" y="210"></point>
        <point x="172" y="213"></point>
        <point x="173" y="238"></point>
        <point x="167" y="251"></point>
        <point x="160" y="248"></point>
        <point x="154" y="265"></point>
        <point x="169" y="264"></point>
        <point x="178" y="247"></point>
        <point x="186" y="240"></point>
        <point x="198" y="260"></point>
        <point x="200" y="271"></point>
        <point x="217" y="271"></point>
        <point x="219" y="262"></point>
        <point x="207" y="258"></point>
        <point x="195" y="230"></point>
        <point x="192" y="198"></point>
        <point x="210" y="184"></point>
        <point x="227" y="164"></point>
        <point x="242" y="144"></point>
        <point x="259" y="145"></point>
        <point x="284" y="151"></point>
        <point x="277" y="141"></point>
        <point x="293" y="140"></point>
        <point x="299" y="134"></point>
        <point x="297" y="127"></point>
        <point x="273" y="119"></point>
        <point x="270" y="105"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="-1" y="195"></point>
        <point x="14" y="180"></point>
        <point x="36" y="166"></point>
        <point x="40" y="153"></point>
        <point x="53" y="140"></point>
        <point x="82" y="131"></point>
        <point x="134" y="133"></point>
        <point x="159" y="126"></point>
        <point x="188" y="115"></point>
        <point x="227" y="108"></point>
        <point x="236" y="102"></point>
        <point x="238" y="98"></point>
        <point x="268" y="86"></point>
        <point x="269" y="92"></point>
        <point x="281" y="87"></point>
        <point x="269" y="103"></point>
        <point x="269" y="113"></point>
      </polygon>
    </shape>
    <shape name="x" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="270" y="75"></point>
        <point x="225" y="30"></point>
        <point x="30" y="225"></point>
        <point x="75" y="270"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="30" y="75"></point>
        <point x="75" y="30"></point>
        <point x="270" y="225"></point>
        <point x="225" y="270"></point>
      </polygon>
    </shape>
  </turtleShapes>
  <linkShapes>
    <shape name="default" curviness="0.0">
      <lines>
        <line x="-0.2" visible="false">
          <dash value="0.0"></dash>
          <dash value="1.0"></dash>
        </line>
        <line x="0.0" visible="true">
          <dash value="1.0"></dash>
          <dash value="0.0"></dash>
        </line>
        <line x="0.2" visible="false">
          <dash value="0.0"></dash>
          <dash value="1.0"></dash>
        </line>
      </lines>
      <indicator>
        <shape name="link direction" rotatable="true" editableColorIndex="0">
          <line endX="90" startY="150" marked="true" color="-1920102913" endY="180" startX="150"></line>
          <line endX="210" startY="150" marked="true" color="-1920102913" endY="180" startX="150"></line>
        </shape>
      </indicator>
    </shape>
  </linkShapes>
  <previewCommands>setup repeat 75 [ go ]</previewCommands>
</model>
